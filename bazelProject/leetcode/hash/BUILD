cc_library(
	name  = "128LongestConsecutiveSequence",
    hdrs  = ["128.LongestConsecutiveSequence.h"], 
	srcs  = ["128.LongestConsecutiveSequence.cpp"],
	copts = ["-std=c++11"],
)

cc_binary(
	name  = "128LongestConsecutiveSequenceTest",
	srcs  = ["128.LongestConsecutiveSequenceTest.cpp"],
	copts = ["-std=c++11"],
	deps  = ["128LongestConsecutiveSequence",
			 "@googletest//:gtest_main"],
)

cc_library(
	name  = "149MaxPointsonaLine",
    hdrs  = ["149.MaxPointsonaLine.h"], 
	srcs  = ["149.MaxPointsonaLine.cpp"],
	copts = ["-std=c++11"],
)

cc_binary(
	name  = "149MaxPointsonaLineTest",
	srcs  = ["149.MaxPointsonaLineTest.cpp"],
	copts = ["-std=c++11"],
	deps  = ["149MaxPointsonaLine",
			 "@googletest//:gtest_main"],
)


cc_library(
	name  = "332ReconstructItinerary",
    hdrs  = ["332.ReconstructItinerary.h"], 
	srcs  = ["332.ReconstructItinerary.cpp"],
	copts = ["-std=c++11"],
)

cc_binary(
	name  = "332ReconstructItineraryTest",
	srcs  = ["332.ReconstructItineraryTest.cpp"],
	copts = ["-std=c++11"],
	deps  = ["332ReconstructItinerary",
			 "@googletest//:gtest_main"],
)


cc_library(
	name  = "303RangeSumQueryImmutable",
    hdrs  = ["303.RangeSumQuery-Immutable.h"], 
	srcs  = ["303.RangeSumQuery-Immutable.cpp"],
	copts = ["-std=c++11"],
)

cc_binary(
	name  = "303RangeSumQueryImmutableTest",
	srcs  = ["303.RangeSumQuery-ImmutableTest.cpp"],
	copts = ["-std=c++11"],
	deps  = ["303RangeSumQueryImmutable",
			 "@googletest//:gtest_main"],
)


cc_library(
	name  = "304RangeSumQuery2DImmutable",
    hdrs  = ["304.RangeSumQuery2D-Immutable.h"], 
	srcs  = ["304.RangeSumQuery2D-Immutable.cpp"],
	copts = ["-std=c++11"],
)

cc_binary(
	name  = "304RangeSumQuery2DImmutableTest",
	srcs  = ["304.RangeSumQuery2D-ImmutableTest.cpp"],
	copts = ["-std=c++11"],
	deps  = ["304RangeSumQuery2DImmutable",
			 "@googletest//:gtest_main"],
)

cc_library(
	name  = "560SubarraySumEqualsK",
    hdrs  = ["560.SubarraySumEqualsK.h"], 
	srcs  = ["560.SubarraySumEqualsK.cpp"],
	copts = ["-std=c++11"],
)

cc_binary(
	name  = "560SubarraySumEqualsKTest",
	srcs  = ["560.SubarraySumEqualsKTest.cpp"],
	copts = ["-std=c++11"],
	deps  = ["560SubarraySumEqualsK",
			 "@googletest//:gtest_main"],
)